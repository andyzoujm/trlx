# Request a persistent volume
apiVersion: v1
kind: PersistentVolume 
metadata:
  name: proxy-gaming-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/home/aogara/trlx"
---
# Make a claim on the persistent volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: proxy-gaming-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: manual
---
# Run a job
apiVersion: batch.volcano.sh/v1alpha1
kind: Job
metadata:
  name: proxy-gaming-job
spec:
  minAvailable: 1
  schedulerName: volcano
  queue: default
  policies:
  - event: PodEvicted
    action: RestartJob
  volumes:
  - mountPath: /home/aogara/trlx
    volumeClaimName: proxy-gaming-volume
  tasks:
  - replicas: 1
    name: build
    policies:
    - event: TaskCompleted
      action: CompleteJob
    template:
      metadata:
        name: volcano-job
        labels:
          environment: research
      spec:
        restartPolicy: OnFailure
        # The actual container and command to run
        containers:
        - name: proxy-gaming-container
          image: proxy-gaming-image:latest  # This needs to be the actual name you gave the image when you built with Docker
          resources:
            requests:  # Request 1 CPU and 1 GPU
              cpu: 1
              nvidia.com/gpu: 1
            limits:
              cpu: 1
              nvidia.com/gpu: 1
        # Optional, only use env if you need to pass environment variables
          # env:  
          #  - name: SOME_ENV_VARIABLE
          #    value: "the-value
        # Optional, only use command if you need to run the Docker image with a command (i.e. if you didn't define CMD or ENTRYPOINT)
          # command: ["sh", "-c", "cd /data && echo 'hi' > test.txt && cat test.txt"]
